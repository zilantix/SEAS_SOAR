2025-08-18 21:12:43,735:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-18 21:12:43,735:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-18 21:12:43,735:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-18 21:12:43,735:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-18 21:17:51,532:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-18 21:17:51,532:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-18 21:17:51,532:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-18 21:17:51,532:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-18 21:18:56,971:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-18 21:18:56,971:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-18 21:18:56,971:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-18 21:18:56,971:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-18 21:18:57,703:INFO:PyCaret ClassificationExperiment
2025-08-18 21:18:57,703:INFO:Logging name: clf-default-name
2025-08-18 21:18:57,703:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-08-18 21:18:57,703:INFO:version 3.3.2
2025-08-18 21:18:57,703:INFO:Initializing setup()
2025-08-18 21:18:57,703:INFO:self.USI: aecf
2025-08-18 21:18:57,703:INFO:self._variable_keys: {'_ml_usecase', 'memory', 'X_train', 'target_param', 'is_multiclass', 'fold_shuffle_param', 'html_param', 'n_jobs_param', 'y', 'y_test', 'pipeline', 'X', 'data', 'gpu_n_jobs_param', '_available_plots', 'X_test', 'exp_id', 'logging_param', 'y_train', 'USI', 'seed', 'log_plots_param', 'idx', 'fold_groups_param', 'fold_generator', 'exp_name_log', 'fix_imbalance', 'gpu_param'}
2025-08-18 21:18:57,703:INFO:Checking environment
2025-08-18 21:18:57,703:INFO:python_version: 3.11.13
2025-08-18 21:18:57,703:INFO:python_build: ('main', 'Jun  3 2025 18:38:25')
2025-08-18 21:18:57,703:INFO:machine: arm64
2025-08-18 21:18:57,726:INFO:platform: macOS-15.6-arm64-arm-64bit
2025-08-18 21:18:57,726:INFO:Memory: svmem(total=17179869184, available=5177573376, percent=69.9, used=7259176960, free=104972288, active=5083611136, inactive=4984111104, wired=2175565824)
2025-08-18 21:18:57,726:INFO:Physical Core: 8
2025-08-18 21:18:57,726:INFO:Logical Core: 8
2025-08-18 21:18:57,726:INFO:Checking libraries
2025-08-18 21:18:57,726:INFO:System:
2025-08-18 21:18:57,726:INFO:    python: 3.11.13 (main, Jun  3 2025, 18:38:25) [Clang 17.0.0 (clang-1700.0.13.3)]
2025-08-18 21:18:57,726:INFO:executable: /Users/ruslaniakupov/Downloads/SOAR/.venv/bin/python
2025-08-18 21:18:57,726:INFO:   machine: macOS-15.6-arm64-arm-64bit
2025-08-18 21:18:57,726:INFO:PyCaret required dependencies:
2025-08-18 21:21:16,594:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-18 21:21:16,594:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-18 21:21:16,594:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-18 21:21:16,594:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-18 21:21:17,375:INFO:PyCaret ClassificationExperiment
2025-08-18 21:21:17,375:INFO:Logging name: clf-default-name
2025-08-18 21:21:17,375:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-08-18 21:21:17,375:INFO:version 3.3.2
2025-08-18 21:21:17,375:INFO:Initializing setup()
2025-08-18 21:21:17,375:INFO:self.USI: a152
2025-08-18 21:21:17,375:INFO:self._variable_keys: {'fold_shuffle_param', 'y_test', 'pipeline', 'y', '_available_plots', 'fold_generator', 'y_train', 'target_param', 'memory', '_ml_usecase', 'X_test', 'is_multiclass', 'exp_id', 'gpu_n_jobs_param', 'log_plots_param', 'data', 'seed', 'X', 'X_train', 'idx', 'fix_imbalance', 'logging_param', 'fold_groups_param', 'USI', 'exp_name_log', 'html_param', 'n_jobs_param', 'gpu_param'}
2025-08-18 21:21:17,375:INFO:Checking environment
2025-08-18 21:21:17,375:INFO:python_version: 3.11.13
2025-08-18 21:21:17,375:INFO:python_build: ('main', 'Jun  3 2025 18:38:25')
2025-08-18 21:21:17,375:INFO:machine: arm64
2025-08-18 21:21:17,390:INFO:platform: macOS-15.6-arm64-arm-64bit
2025-08-18 21:21:17,390:INFO:Memory: svmem(total=17179869184, available=5164646400, percent=69.9, used=7331758080, free=64880640, active=5110136832, inactive=4992434176, wired=2221621248)
2025-08-18 21:21:17,390:INFO:Physical Core: 8
2025-08-18 21:21:17,390:INFO:Logical Core: 8
2025-08-18 21:21:17,390:INFO:Checking libraries
2025-08-18 21:21:17,390:INFO:System:
2025-08-18 21:21:17,390:INFO:    python: 3.11.13 (main, Jun  3 2025, 18:38:25) [Clang 17.0.0 (clang-1700.0.13.3)]
2025-08-18 21:21:17,391:INFO:executable: /Users/ruslaniakupov/Downloads/SOAR/.venv/bin/python
2025-08-18 21:21:17,391:INFO:   machine: macOS-15.6-arm64-arm-64bit
2025-08-18 21:21:17,391:INFO:PyCaret required dependencies:
2025-08-18 21:21:17,392:INFO:                 pip: 25.2
2025-08-18 21:21:17,392:INFO:          setuptools: 80.9.0
2025-08-18 21:21:17,392:INFO:             pycaret: 3.3.2
2025-08-18 21:21:17,392:INFO:             IPython: 9.4.0
2025-08-18 21:21:17,392:INFO:          ipywidgets: 8.1.7
2025-08-18 21:21:17,392:INFO:                tqdm: 4.67.1
2025-08-18 21:21:17,392:INFO:               numpy: 1.26.4
2025-08-18 21:21:17,392:INFO:              pandas: 2.1.4
2025-08-18 21:21:17,392:INFO:              jinja2: 3.1.6
2025-08-18 21:21:17,392:INFO:               scipy: 1.11.4
2025-08-18 21:21:17,392:INFO:              joblib: 1.3.2
2025-08-18 21:21:17,392:INFO:             sklearn: 1.4.2
2025-08-18 21:21:17,392:INFO:                pyod: 2.0.5
2025-08-18 21:21:17,392:INFO:            imblearn: 0.14.0
2025-08-18 21:21:17,392:INFO:   category_encoders: 2.7.0
2025-08-18 21:21:17,392:INFO:            lightgbm: Not installed
2025-08-18 21:21:17,392:INFO:               numba: 0.61.2
2025-08-18 21:21:17,392:INFO:            requests: 2.32.4
2025-08-18 21:21:17,392:INFO:          matplotlib: 3.7.5
2025-08-18 21:21:17,392:INFO:          scikitplot: 0.3.7
2025-08-18 21:21:17,392:INFO:         yellowbrick: 1.5
2025-08-18 21:21:17,392:INFO:              plotly: 5.24.1
2025-08-18 21:21:17,392:INFO:    plotly-resampler: Not installed
2025-08-18 21:21:17,392:INFO:             kaleido: 1.0.0
2025-08-18 21:21:17,392:INFO:           schemdraw: 0.15
2025-08-18 21:21:17,392:INFO:         statsmodels: 0.14.5
2025-08-18 21:21:17,392:INFO:              sktime: 0.26.0
2025-08-18 21:21:17,392:INFO:               tbats: 1.1.3
2025-08-18 21:21:17,392:INFO:            pmdarima: 2.0.4
2025-08-18 21:21:17,392:INFO:              psutil: 7.0.0
2025-08-18 21:21:17,392:INFO:          markupsafe: 3.0.2
2025-08-18 21:21:17,392:INFO:             pickle5: Not installed
2025-08-18 21:21:17,392:INFO:         cloudpickle: 3.1.1
2025-08-18 21:21:17,392:INFO:         deprecation: 2.1.0
2025-08-18 21:21:17,392:INFO:              xxhash: 3.5.0
2025-08-18 21:21:17,392:INFO:           wurlitzer: 3.1.1
2025-08-18 21:21:17,393:INFO:PyCaret optional dependencies:
2025-08-18 21:21:17,398:INFO:                shap: Not installed
2025-08-18 21:21:17,398:INFO:           interpret: Not installed
2025-08-18 21:21:17,398:INFO:                umap: Not installed
2025-08-18 21:21:17,398:INFO:     ydata_profiling: Not installed
2025-08-18 21:21:17,398:INFO:  explainerdashboard: Not installed
2025-08-18 21:21:17,398:INFO:             autoviz: Not installed
2025-08-18 21:21:17,398:INFO:           fairlearn: Not installed
2025-08-18 21:21:17,398:INFO:          deepchecks: Not installed
2025-08-18 21:21:17,398:INFO:             xgboost: Not installed
2025-08-18 21:21:17,398:INFO:            catboost: Not installed
2025-08-18 21:21:17,398:INFO:              kmodes: Not installed
2025-08-18 21:21:17,398:INFO:             mlxtend: Not installed
2025-08-18 21:21:17,398:INFO:       statsforecast: Not installed
2025-08-18 21:21:17,398:INFO:        tune_sklearn: Not installed
2025-08-18 21:21:17,398:INFO:                 ray: Not installed
2025-08-18 21:21:17,398:INFO:            hyperopt: Not installed
2025-08-18 21:21:17,398:INFO:              optuna: Not installed
2025-08-18 21:21:17,398:INFO:               skopt: Not installed
2025-08-18 21:21:17,398:INFO:              mlflow: Not installed
2025-08-18 21:21:17,398:INFO:              gradio: Not installed
2025-08-18 21:21:17,398:INFO:             fastapi: Not installed
2025-08-18 21:21:17,398:INFO:             uvicorn: Not installed
2025-08-18 21:21:17,398:INFO:              m2cgen: Not installed
2025-08-18 21:21:17,398:INFO:           evidently: Not installed
2025-08-18 21:21:17,398:INFO:               fugue: Not installed
2025-08-18 21:21:17,398:INFO:           streamlit: 1.48.1
2025-08-18 21:21:17,398:INFO:             prophet: Not installed
2025-08-18 21:21:17,398:INFO:None
2025-08-18 21:21:17,398:INFO:Set up data.
2025-08-18 21:21:17,403:INFO:Set up folding strategy.
2025-08-18 21:21:17,403:INFO:Set up train/test split.
2025-08-18 21:21:17,993:INFO:Set up index.
2025-08-18 21:21:17,994:INFO:Assigning column types.
2025-08-18 21:21:17,998:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-08-18 21:21:18,028:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-18 21:21:18,030:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-18 21:21:18,048:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 21:24:25,749:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-18 21:24:25,750:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-18 21:24:25,750:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-18 21:24:25,750:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-18 21:24:26,517:INFO:PyCaret ClassificationExperiment
2025-08-18 21:24:26,517:INFO:Logging name: clf-default-name
2025-08-18 21:24:26,517:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-08-18 21:24:26,517:INFO:version 3.3.2
2025-08-18 21:24:26,517:INFO:Initializing setup()
2025-08-18 21:24:26,517:INFO:self.USI: 5ac0
2025-08-18 21:24:26,517:INFO:self._variable_keys: {'pipeline', 'data', 'y_train', 'log_plots_param', 'gpu_param', 'y_test', 'memory', 'n_jobs_param', 'fold_shuffle_param', 'idx', 'is_multiclass', 'seed', 'X_test', 'gpu_n_jobs_param', 'target_param', '_available_plots', 'fold_groups_param', 'USI', 'X', 'exp_id', 'logging_param', 'fold_generator', 'y', 'exp_name_log', '_ml_usecase', 'fix_imbalance', 'X_train', 'html_param'}
2025-08-18 21:24:26,517:INFO:Checking environment
2025-08-18 21:24:26,517:INFO:python_version: 3.11.13
2025-08-18 21:24:26,517:INFO:python_build: ('main', 'Jun  3 2025 18:38:25')
2025-08-18 21:24:26,517:INFO:machine: arm64
2025-08-18 21:24:26,529:INFO:platform: macOS-15.6-arm64-arm-64bit
2025-08-18 21:24:26,529:INFO:Memory: svmem(total=17179869184, available=5174362112, percent=69.9, used=7235862528, free=62390272, active=5121703936, inactive=5010440192, wired=2114158592)
2025-08-18 21:24:26,530:INFO:Physical Core: 8
2025-08-18 21:24:26,530:INFO:Logical Core: 8
2025-08-18 21:24:26,530:INFO:Checking libraries
2025-08-18 21:24:26,530:INFO:System:
2025-08-18 21:24:26,530:INFO:    python: 3.11.13 (main, Jun  3 2025, 18:38:25) [Clang 17.0.0 (clang-1700.0.13.3)]
2025-08-18 21:24:26,530:INFO:executable: /Users/ruslaniakupov/Downloads/SOAR/.venv/bin/python
2025-08-18 21:24:26,530:INFO:   machine: macOS-15.6-arm64-arm-64bit
2025-08-18 21:24:26,530:INFO:PyCaret required dependencies:
2025-08-18 21:24:26,551:INFO:                 pip: 25.2
2025-08-18 21:24:26,551:INFO:          setuptools: 80.9.0
2025-08-18 21:24:26,551:INFO:             pycaret: 3.3.2
2025-08-18 21:24:26,551:INFO:             IPython: 9.4.0
2025-08-18 21:24:26,551:INFO:          ipywidgets: 8.1.7
2025-08-18 21:24:26,551:INFO:                tqdm: 4.67.1
2025-08-18 21:24:26,551:INFO:               numpy: 1.26.4
2025-08-18 21:24:26,551:INFO:              pandas: 2.1.4
2025-08-18 21:24:26,551:INFO:              jinja2: 3.1.6
2025-08-18 21:24:26,551:INFO:               scipy: 1.11.4
2025-08-18 21:24:26,551:INFO:              joblib: 1.3.2
2025-08-18 21:24:26,551:INFO:             sklearn: 1.4.2
2025-08-18 21:24:26,551:INFO:                pyod: 2.0.5
2025-08-18 21:24:26,551:INFO:            imblearn: 0.14.0
2025-08-18 21:24:26,551:INFO:   category_encoders: 2.7.0
2025-08-18 21:24:26,551:INFO:            lightgbm: 4.6.0
2025-08-18 21:24:26,551:INFO:               numba: 0.61.2
2025-08-18 21:24:26,551:INFO:            requests: 2.32.4
2025-08-18 21:24:26,551:INFO:          matplotlib: 3.7.5
2025-08-18 21:24:26,551:INFO:          scikitplot: 0.3.7
2025-08-18 21:24:26,551:INFO:         yellowbrick: 1.5
2025-08-18 21:24:26,551:INFO:              plotly: 5.24.1
2025-08-18 21:24:26,551:INFO:    plotly-resampler: Not installed
2025-08-18 21:24:26,551:INFO:             kaleido: 1.0.0
2025-08-18 21:24:26,551:INFO:           schemdraw: 0.15
2025-08-18 21:24:26,551:INFO:         statsmodels: 0.14.5
2025-08-18 21:24:26,551:INFO:              sktime: 0.26.0
2025-08-18 21:24:26,552:INFO:               tbats: 1.1.3
2025-08-18 21:24:26,552:INFO:            pmdarima: 2.0.4
2025-08-18 21:24:26,552:INFO:              psutil: 7.0.0
2025-08-18 21:24:26,552:INFO:          markupsafe: 3.0.2
2025-08-18 21:24:26,552:INFO:             pickle5: Not installed
2025-08-18 21:24:26,552:INFO:         cloudpickle: 3.1.1
2025-08-18 21:24:26,552:INFO:         deprecation: 2.1.0
2025-08-18 21:24:26,552:INFO:              xxhash: 3.5.0
2025-08-18 21:24:26,552:INFO:           wurlitzer: 3.1.1
2025-08-18 21:24:26,552:INFO:PyCaret optional dependencies:
2025-08-18 21:24:26,556:INFO:                shap: Not installed
2025-08-18 21:24:26,556:INFO:           interpret: Not installed
2025-08-18 21:24:26,556:INFO:                umap: Not installed
2025-08-18 21:24:26,556:INFO:     ydata_profiling: Not installed
2025-08-18 21:24:26,556:INFO:  explainerdashboard: Not installed
2025-08-18 21:24:26,556:INFO:             autoviz: Not installed
2025-08-18 21:24:26,556:INFO:           fairlearn: Not installed
2025-08-18 21:24:26,556:INFO:          deepchecks: Not installed
2025-08-18 21:24:26,556:INFO:             xgboost: Not installed
2025-08-18 21:24:26,556:INFO:            catboost: Not installed
2025-08-18 21:24:26,556:INFO:              kmodes: Not installed
2025-08-18 21:24:26,556:INFO:             mlxtend: Not installed
2025-08-18 21:24:26,556:INFO:       statsforecast: Not installed
2025-08-18 21:24:26,556:INFO:        tune_sklearn: Not installed
2025-08-18 21:24:26,556:INFO:                 ray: Not installed
2025-08-18 21:24:26,556:INFO:            hyperopt: Not installed
2025-08-18 21:24:26,556:INFO:              optuna: Not installed
2025-08-18 21:24:26,556:INFO:               skopt: Not installed
2025-08-18 21:24:26,556:INFO:              mlflow: Not installed
2025-08-18 21:24:26,556:INFO:              gradio: Not installed
2025-08-18 21:24:26,556:INFO:             fastapi: Not installed
2025-08-18 21:24:26,556:INFO:             uvicorn: Not installed
2025-08-18 21:24:26,556:INFO:              m2cgen: Not installed
2025-08-18 21:24:26,556:INFO:           evidently: Not installed
2025-08-18 21:24:26,556:INFO:               fugue: Not installed
2025-08-18 21:24:26,556:INFO:           streamlit: 1.48.1
2025-08-18 21:24:26,556:INFO:             prophet: Not installed
2025-08-18 21:24:26,556:INFO:None
2025-08-18 21:24:26,557:INFO:Set up data.
2025-08-18 21:24:26,562:INFO:Set up folding strategy.
2025-08-18 21:24:26,562:INFO:Set up train/test split.
2025-08-18 21:24:26,573:INFO:Set up index.
2025-08-18 21:24:26,573:INFO:Assigning column types.
2025-08-18 21:24:26,575:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-08-18 21:24:26,591:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-18 21:24:26,593:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-18 21:24:26,605:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 21:24:26,605:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 21:24:26,622:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-18 21:24:26,622:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-18 21:24:26,632:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 21:24:26,632:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 21:24:26,632:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-08-18 21:24:26,649:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-18 21:24:26,659:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 21:24:26,659:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 21:24:26,676:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-18 21:24:26,686:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 21:24:26,686:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 21:24:26,686:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-08-18 21:24:26,713:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 21:24:26,713:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 21:24:26,740:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 21:24:26,740:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 21:24:26,742:INFO:Preparing preprocessing pipeline...
2025-08-18 21:24:26,743:INFO:Set up label encoding.
2025-08-18 21:24:26,743:INFO:Set up simple imputation.
2025-08-18 21:24:26,753:INFO:Finished creating preprocessing pipeline.
2025-08-18 21:24:26,755:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/33/8s2ttfyd7170lv2_ww0lccmw0000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address',
                                             'Abnormal_U...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-08-18 21:24:26,755:INFO:Creating final display dataframe.
2025-08-18 21:24:26,781:INFO:Setup _display_container:                     Description                    Value
0                    Session id                       42
1                        Target                    label
2                   Target type                   Binary
3                Target mapping  BENIGN: 0, MALICIOUS: 1
4           Original data shape               (3600, 12)
5        Transformed data shape               (3600, 12)
6   Transformed train set shape               (2520, 12)
7    Transformed test set shape               (1080, 12)
8              Numeric features                       11
9                    Preprocess                     True
10              Imputation type                   simple
11           Numeric imputation                     mean
12       Categorical imputation                     mode
13               Fold Generator          StratifiedKFold
14                  Fold Number                       10
15                     CPU Jobs                       -1
16                      Use GPU                    False
17               Log Experiment                    False
18              Experiment Name         clf-default-name
19                          USI                     5ac0
2025-08-18 21:24:26,807:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 21:24:26,807:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 21:24:26,834:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 21:24:26,834:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 21:24:26,835:INFO:setup() successfully completed in 0.32s...............
2025-08-18 21:24:26,835:INFO:Initializing create_model()
2025-08-18 21:24:26,835:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16fe7b010>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-18 21:24:26,835:INFO:Checking exceptions
2025-08-18 21:24:27,001:INFO:Importing libraries
2025-08-18 21:24:27,001:INFO:Copying training dataset
2025-08-18 21:24:27,005:INFO:Defining folds
2025-08-18 21:24:27,005:INFO:Declaring metric variables
2025-08-18 21:24:27,005:INFO:Importing untrained model
2025-08-18 21:24:27,006:INFO:Logistic Regression Imported successfully
2025-08-18 21:24:27,006:INFO:Starting cross validation
2025-08-18 21:24:27,006:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-18 21:24:29,204:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:24:29,205:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:24:29,206:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:24:29,210:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:24:29,214:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:24:29,217:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:24:29,219:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:24:29,221:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:24:29,222:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:24:29,232:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:24:29,233:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:24:29,235:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:24:29,235:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:24:29,236:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:24:29,238:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:24:29,241:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:24:29,242:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:24:29,244:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:24:29,288:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:24:29,292:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:24:29,296:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:24:29,303:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:24:29,305:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:24:29,306:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:24:29,307:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:24:29,309:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:24:29,310:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:24:29,314:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:24:29,315:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:24:29,316:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:24:29,326:INFO:Calculating mean and std
2025-08-18 21:24:29,326:INFO:Creating metrics dataframe
2025-08-18 21:24:29,328:INFO:Finalizing model
2025-08-18 21:24:29,395:INFO:Uploading results into container
2025-08-18 21:24:29,396:INFO:Uploading model into container now
2025-08-18 21:24:29,403:INFO:_master_model_container: 1
2025-08-18 21:24:29,403:INFO:_display_container: 2
2025-08-18 21:24:29,403:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-18 21:24:29,403:INFO:create_model() successfully completed......................................
2025-08-18 21:24:29,468:INFO:Initializing finalize_model()
2025-08-18 21:24:29,468:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16fe7b010>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-18 21:24:29,469:INFO:Finalizing LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-18 21:24:29,470:INFO:Initializing create_model()
2025-08-18 21:24:29,470:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16fe7b010>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-18 21:24:29,470:INFO:Checking exceptions
2025-08-18 21:24:29,470:INFO:Importing libraries
2025-08-18 21:24:29,470:INFO:Copying training dataset
2025-08-18 21:24:29,470:INFO:Defining folds
2025-08-18 21:24:29,470:INFO:Declaring metric variables
2025-08-18 21:24:29,470:INFO:Importing untrained model
2025-08-18 21:24:29,470:INFO:Declaring custom model
2025-08-18 21:24:29,470:INFO:Logistic Regression Imported successfully
2025-08-18 21:24:29,471:INFO:Cross validation set to False
2025-08-18 21:24:29,471:INFO:Fitting Model
2025-08-18 21:24:29,495:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address',
                                             'Abnormal_URL', 'HTTPS_token',
                                             'URL_Length', 'URL_of_Anchor',
                                             'Page_Ra...
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=42,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-08-18 21:24:29,495:INFO:create_model() successfully completed......................................
2025-08-18 21:24:29,536:INFO:_master_model_container: 1
2025-08-18 21:24:29,536:INFO:_display_container: 2
2025-08-18 21:24:29,537:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address',
                                             'Abnormal_URL', 'HTTPS_token',
                                             'URL_Length', 'URL_of_Anchor',
                                             'Page_Ra...
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=42,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-08-18 21:24:29,537:INFO:finalize_model() successfully completed......................................
2025-08-18 21:24:29,569:INFO:Initializing save_model()
2025-08-18 21:24:29,569:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address',
                                             'Abnormal_URL', 'HTTPS_token',
                                             'URL_Length', 'URL_of_Anchor',
                                             'Page_Ra...
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=42,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), model_name=artifacts/phishing_url_detector, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/33/8s2ttfyd7170lv2_ww0lccmw0000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address',
                                             'Abnormal_U...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-08-18 21:24:29,569:INFO:Adding model into prep_pipe
2025-08-18 21:24:29,569:WARNING:Only Model saved as it was a pipeline.
2025-08-18 21:24:29,570:INFO:artifacts/phishing_url_detector.pkl saved in current working directory
2025-08-18 21:24:29,572:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address',
                                             'Abnormal_URL', 'HTTPS_token',
                                             'URL_Length', 'URL_of_Anchor',
                                             'Page_Ra...
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=42,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-08-18 21:24:29,572:INFO:save_model() successfully completed......................................
2025-08-18 21:24:29,618:INFO:PyCaret ClusteringExperiment
2025-08-18 21:24:29,618:INFO:Logging name: cluster-default-name
2025-08-18 21:24:29,618:INFO:ML Usecase: MLUsecase.CLUSTERING
2025-08-18 21:24:29,618:INFO:version 3.3.2
2025-08-18 21:24:29,618:INFO:Initializing setup()
2025-08-18 21:24:29,618:INFO:self.USI: c55a
2025-08-18 21:24:29,618:INFO:self._variable_keys: {'pipeline', 'data', 'log_plots_param', 'gpu_param', 'memory', 'n_jobs_param', 'idx', 'seed', 'gpu_n_jobs_param', '_available_plots', 'USI', 'X', 'exp_id', 'logging_param', 'exp_name_log', '_ml_usecase', 'html_param'}
2025-08-18 21:24:29,618:INFO:Checking environment
2025-08-18 21:24:29,618:INFO:python_version: 3.11.13
2025-08-18 21:24:29,618:INFO:python_build: ('main', 'Jun  3 2025 18:38:25')
2025-08-18 21:24:29,618:INFO:machine: arm64
2025-08-18 21:24:29,618:INFO:platform: macOS-15.6-arm64-arm-64bit
2025-08-18 21:24:29,618:INFO:Memory: svmem(total=17179869184, available=4849844224, percent=71.8, used=6936035328, free=71614464, active=4797169664, inactive=4739039232, wired=2138865664)
2025-08-18 21:24:29,618:INFO:Physical Core: 8
2025-08-18 21:24:29,618:INFO:Logical Core: 8
2025-08-18 21:24:29,618:INFO:Checking libraries
2025-08-18 21:24:29,618:INFO:System:
2025-08-18 21:24:29,618:INFO:    python: 3.11.13 (main, Jun  3 2025, 18:38:25) [Clang 17.0.0 (clang-1700.0.13.3)]
2025-08-18 21:24:29,619:INFO:executable: /Users/ruslaniakupov/Downloads/SOAR/.venv/bin/python
2025-08-18 21:24:29,619:INFO:   machine: macOS-15.6-arm64-arm-64bit
2025-08-18 21:24:29,619:INFO:PyCaret required dependencies:
2025-08-18 21:24:29,619:INFO:                 pip: 25.2
2025-08-18 21:24:29,619:INFO:          setuptools: 80.9.0
2025-08-18 21:24:29,619:INFO:             pycaret: 3.3.2
2025-08-18 21:24:29,619:INFO:             IPython: 9.4.0
2025-08-18 21:24:29,619:INFO:          ipywidgets: 8.1.7
2025-08-18 21:24:29,619:INFO:                tqdm: 4.67.1
2025-08-18 21:24:29,619:INFO:               numpy: 1.26.4
2025-08-18 21:24:29,619:INFO:              pandas: 2.1.4
2025-08-18 21:24:29,619:INFO:              jinja2: 3.1.6
2025-08-18 21:24:29,619:INFO:               scipy: 1.11.4
2025-08-18 21:24:29,619:INFO:              joblib: 1.3.2
2025-08-18 21:24:29,619:INFO:             sklearn: 1.4.2
2025-08-18 21:24:29,619:INFO:                pyod: 2.0.5
2025-08-18 21:24:29,619:INFO:            imblearn: 0.14.0
2025-08-18 21:24:29,619:INFO:   category_encoders: 2.7.0
2025-08-18 21:24:29,619:INFO:            lightgbm: 4.6.0
2025-08-18 21:24:29,619:INFO:               numba: 0.61.2
2025-08-18 21:24:29,619:INFO:            requests: 2.32.4
2025-08-18 21:24:29,619:INFO:          matplotlib: 3.7.5
2025-08-18 21:24:29,619:INFO:          scikitplot: 0.3.7
2025-08-18 21:24:29,619:INFO:         yellowbrick: 1.5
2025-08-18 21:24:29,619:INFO:              plotly: 5.24.1
2025-08-18 21:24:29,619:INFO:    plotly-resampler: Not installed
2025-08-18 21:24:29,619:INFO:             kaleido: 1.0.0
2025-08-18 21:24:29,619:INFO:           schemdraw: 0.15
2025-08-18 21:24:29,619:INFO:         statsmodels: 0.14.5
2025-08-18 21:24:29,619:INFO:              sktime: 0.26.0
2025-08-18 21:24:29,619:INFO:               tbats: 1.1.3
2025-08-18 21:24:29,619:INFO:            pmdarima: 2.0.4
2025-08-18 21:24:29,619:INFO:              psutil: 7.0.0
2025-08-18 21:24:29,619:INFO:          markupsafe: 3.0.2
2025-08-18 21:24:29,619:INFO:             pickle5: Not installed
2025-08-18 21:24:29,619:INFO:         cloudpickle: 3.1.1
2025-08-18 21:24:29,619:INFO:         deprecation: 2.1.0
2025-08-18 21:24:29,619:INFO:              xxhash: 3.5.0
2025-08-18 21:24:29,619:INFO:           wurlitzer: 3.1.1
2025-08-18 21:24:29,619:INFO:PyCaret optional dependencies:
2025-08-18 21:24:29,620:INFO:                shap: Not installed
2025-08-18 21:24:29,620:INFO:           interpret: Not installed
2025-08-18 21:24:29,620:INFO:                umap: Not installed
2025-08-18 21:24:29,620:INFO:     ydata_profiling: Not installed
2025-08-18 21:24:29,620:INFO:  explainerdashboard: Not installed
2025-08-18 21:24:29,620:INFO:             autoviz: Not installed
2025-08-18 21:24:29,620:INFO:           fairlearn: Not installed
2025-08-18 21:24:29,620:INFO:          deepchecks: Not installed
2025-08-18 21:24:29,620:INFO:             xgboost: Not installed
2025-08-18 21:24:29,620:INFO:            catboost: Not installed
2025-08-18 21:24:29,620:INFO:              kmodes: Not installed
2025-08-18 21:24:29,620:INFO:             mlxtend: Not installed
2025-08-18 21:24:29,620:INFO:       statsforecast: Not installed
2025-08-18 21:24:29,620:INFO:        tune_sklearn: Not installed
2025-08-18 21:24:29,620:INFO:                 ray: Not installed
2025-08-18 21:24:29,620:INFO:            hyperopt: Not installed
2025-08-18 21:24:29,620:INFO:              optuna: Not installed
2025-08-18 21:24:29,620:INFO:               skopt: Not installed
2025-08-18 21:24:29,620:INFO:              mlflow: Not installed
2025-08-18 21:24:29,620:INFO:              gradio: Not installed
2025-08-18 21:24:29,620:INFO:             fastapi: Not installed
2025-08-18 21:24:29,620:INFO:             uvicorn: Not installed
2025-08-18 21:24:29,620:INFO:              m2cgen: Not installed
2025-08-18 21:24:29,620:INFO:           evidently: Not installed
2025-08-18 21:24:29,620:INFO:               fugue: Not installed
2025-08-18 21:24:29,620:INFO:           streamlit: 1.48.1
2025-08-18 21:24:29,620:INFO:             prophet: Not installed
2025-08-18 21:24:29,620:INFO:None
2025-08-18 21:24:29,620:INFO:Set up data.
2025-08-18 21:24:29,621:INFO:Set up index.
2025-08-18 21:24:29,621:INFO:Assigning column types.
2025-08-18 21:24:29,622:INFO:Engine successfully changes for model 'kmeans' to 'sklearn'.
2025-08-18 21:24:29,622:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-08-18 21:24:29,622:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 21:24:29,622:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-08-18 21:24:29,622:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 21:24:29,622:INFO:Engine successfully changes for model 'dbscan' to 'sklearn'.
2025-08-18 21:24:29,622:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 21:24:29,622:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 21:24:29,623:INFO:Preparing preprocessing pipeline...
2025-08-18 21:24:29,623:INFO:Set up simple imputation.
2025-08-18 21:24:29,627:INFO:Finished creating preprocessing pipeline.
2025-08-18 21:24:29,628:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/33/8s2ttfyd7170lv2_ww0lccmw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address',
                                             'Abnormal_URL', 'HTTPS_token',
                                             'URL_Length', 'URL_of_Anchor',
                                             'Page_Rank', 'Request_URL',
                                             'has_political_keyword'],
                                    trans...SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-08-18 21:24:29,628:INFO:Creating final display dataframe.
2025-08-18 21:24:29,640:INFO:Setup _display_container:                Description                 Value
0               Session id                    42
1      Original data shape            (3600, 11)
2   Transformed data shape            (3600, 11)
3         Numeric features                    11
4               Preprocess                  True
5          Imputation type                simple
6       Numeric imputation                  mean
7   Categorical imputation                  mode
8                 CPU Jobs                    -1
9                  Use GPU                 False
10          Log Experiment                 False
11         Experiment Name  cluster-default-name
12                     USI                  c55a
2025-08-18 21:24:29,640:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 21:24:29,640:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 21:24:29,640:INFO:setup() successfully completed in 0.02s...............
2025-08-18 21:24:29,640:INFO:Initializing create_model()
2025-08-18 21:24:29,640:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x16fec36d0>, estimator=kmeans, num_clusters=3, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={'random_state': 42})
2025-08-18 21:24:29,640:INFO:Checking exceptions
2025-08-18 21:24:29,644:INFO:Importing untrained model
2025-08-18 21:24:29,644:INFO:K-Means Clustering Imported successfully
2025-08-18 21:24:29,645:INFO:Fitting Model
2025-08-18 21:24:30,020:INFO:KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=3, n_init='auto', random_state=42, tol=0.0001, verbose=0)
2025-08-18 21:24:30,020:INFO:create_models() successfully completed......................................
2025-08-18 21:24:30,021:INFO:Uploading results into container
2025-08-18 21:24:30,022:INFO:Uploading model into container now
2025-08-18 21:24:30,027:INFO:_master_model_container: 1
2025-08-18 21:24:30,027:INFO:_display_container: 2
2025-08-18 21:24:30,027:INFO:KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=3, n_init='auto', random_state=42, tol=0.0001, verbose=0)
2025-08-18 21:24:30,027:INFO:create_model() successfully completed......................................
2025-08-18 21:24:30,091:INFO:Initializing save_model()
2025-08-18 21:24:30,091:INFO:save_model(model=KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=3, n_init='auto', random_state=42, tol=0.0001, verbose=0), model_name=artifacts/threat_actor_profiler, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/33/8s2ttfyd7170lv2_ww0lccmw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address',
                                             'Abnormal_URL', 'HTTPS_token',
                                             'URL_Length', 'URL_of_Anchor',
                                             'Page_Rank', 'Request_URL',
                                             'has_political_keyword'],
                                    trans...SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLUSTERING, kwargs={})
2025-08-18 21:24:30,091:INFO:Adding model into prep_pipe
2025-08-18 21:24:30,092:INFO:artifacts/threat_actor_profiler.pkl saved in current working directory
2025-08-18 21:24:30,093:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address',
                                             'Abnormal_URL', 'HTTPS_token',
                                             'URL_Length', 'URL_of_Anchor',
                                             'Page_Rank', 'Request_URL',
                                             'has_political_keyword'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('trained_model',
                 KMeans(algorithm='lloyd', copy_x=True, init='k-means++',
                        max_iter=300, n_clusters=3, n_init='auto',
                        random_state=42, tol=0.0001, verbose=0))],
         verbose=False)
2025-08-18 21:24:30,093:INFO:save_model() successfully completed......................................
2025-08-18 21:24:30,137:INFO:Initializing assign_model()
2025-08-18 21:24:30,137:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x16fec36d0>, model=KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=3, n_init='auto', random_state=42, tol=0.0001, verbose=0), transformation=False, score=True, verbose=True)
2025-08-18 21:24:30,137:INFO:Checking exceptions
2025-08-18 21:24:30,137:INFO:Determining Trained Model
2025-08-18 21:24:30,137:INFO:Trained Model : K-Means Clustering
2025-08-18 21:24:30,137:INFO:Copying data
2025-08-18 21:24:30,140:INFO:(3600, 12)
2025-08-18 21:24:30,140:INFO:assign_model() successfully completed......................................
2025-08-18 21:25:43,913:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-18 21:25:43,913:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-18 21:25:43,913:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-18 21:25:43,913:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-18 21:25:44,487:INFO:PyCaret ClassificationExperiment
2025-08-18 21:25:44,488:INFO:Logging name: clf-default-name
2025-08-18 21:25:44,488:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-08-18 21:25:44,488:INFO:version 3.3.2
2025-08-18 21:25:44,488:INFO:Initializing setup()
2025-08-18 21:25:44,488:INFO:self.USI: 7cb9
2025-08-18 21:25:44,488:INFO:self._variable_keys: {'target_param', 'USI', 'idx', 'html_param', 'fix_imbalance', 'pipeline', 'y_train', 'X_test', 'y_test', 'is_multiclass', 'seed', 'exp_name_log', 'fold_shuffle_param', '_available_plots', 'exp_id', 'gpu_param', 'gpu_n_jobs_param', 'log_plots_param', 'y', 'fold_generator', '_ml_usecase', 'fold_groups_param', 'X_train', 'data', 'memory', 'X', 'n_jobs_param', 'logging_param'}
2025-08-18 21:25:44,488:INFO:Checking environment
2025-08-18 21:25:44,488:INFO:python_version: 3.11.13
2025-08-18 21:25:44,488:INFO:python_build: ('main', 'Jun  3 2025 18:38:25')
2025-08-18 21:25:44,488:INFO:machine: arm64
2025-08-18 21:25:44,500:INFO:platform: macOS-15.6-arm64-arm-64bit
2025-08-18 21:25:44,500:INFO:Memory: svmem(total=17179869184, available=5230919680, percent=69.6, used=6954024960, free=428474368, active=4809703424, inactive=4743118848, wired=2144321536)
2025-08-18 21:25:44,500:INFO:Physical Core: 8
2025-08-18 21:25:44,500:INFO:Logical Core: 8
2025-08-18 21:25:44,500:INFO:Checking libraries
2025-08-18 21:25:44,500:INFO:System:
2025-08-18 21:25:44,500:INFO:    python: 3.11.13 (main, Jun  3 2025, 18:38:25) [Clang 17.0.0 (clang-1700.0.13.3)]
2025-08-18 21:25:44,500:INFO:executable: /Users/ruslaniakupov/Downloads/SOAR/.venv/bin/python
2025-08-18 21:25:44,500:INFO:   machine: macOS-15.6-arm64-arm-64bit
2025-08-18 21:25:44,500:INFO:PyCaret required dependencies:
2025-08-18 21:25:44,519:INFO:                 pip: 25.2
2025-08-18 21:25:44,519:INFO:          setuptools: 80.9.0
2025-08-18 21:25:44,519:INFO:             pycaret: 3.3.2
2025-08-18 21:25:44,519:INFO:             IPython: 9.4.0
2025-08-18 21:25:44,519:INFO:          ipywidgets: 8.1.7
2025-08-18 21:25:44,519:INFO:                tqdm: 4.67.1
2025-08-18 21:25:44,519:INFO:               numpy: 1.26.4
2025-08-18 21:25:44,519:INFO:              pandas: 2.1.4
2025-08-18 21:25:44,519:INFO:              jinja2: 3.1.6
2025-08-18 21:25:44,519:INFO:               scipy: 1.11.4
2025-08-18 21:25:44,519:INFO:              joblib: 1.3.2
2025-08-18 21:25:44,519:INFO:             sklearn: 1.4.2
2025-08-18 21:25:44,519:INFO:                pyod: 2.0.5
2025-08-18 21:25:44,519:INFO:            imblearn: 0.14.0
2025-08-18 21:25:44,519:INFO:   category_encoders: 2.7.0
2025-08-18 21:25:44,519:INFO:            lightgbm: 4.6.0
2025-08-18 21:25:44,519:INFO:               numba: 0.61.2
2025-08-18 21:25:44,519:INFO:            requests: 2.32.4
2025-08-18 21:25:44,519:INFO:          matplotlib: 3.7.5
2025-08-18 21:25:44,519:INFO:          scikitplot: 0.3.7
2025-08-18 21:25:44,519:INFO:         yellowbrick: 1.5
2025-08-18 21:25:44,519:INFO:              plotly: 5.24.1
2025-08-18 21:25:44,519:INFO:    plotly-resampler: Not installed
2025-08-18 21:25:44,519:INFO:             kaleido: 1.0.0
2025-08-18 21:25:44,519:INFO:           schemdraw: 0.15
2025-08-18 21:25:44,519:INFO:         statsmodels: 0.14.5
2025-08-18 21:25:44,519:INFO:              sktime: 0.26.0
2025-08-18 21:25:44,519:INFO:               tbats: 1.1.3
2025-08-18 21:25:44,519:INFO:            pmdarima: 2.0.4
2025-08-18 21:25:44,519:INFO:              psutil: 7.0.0
2025-08-18 21:25:44,519:INFO:          markupsafe: 3.0.2
2025-08-18 21:25:44,519:INFO:             pickle5: Not installed
2025-08-18 21:25:44,519:INFO:         cloudpickle: 3.1.1
2025-08-18 21:25:44,519:INFO:         deprecation: 2.1.0
2025-08-18 21:25:44,519:INFO:              xxhash: 3.5.0
2025-08-18 21:25:44,519:INFO:           wurlitzer: 3.1.1
2025-08-18 21:25:44,519:INFO:PyCaret optional dependencies:
2025-08-18 21:25:44,525:INFO:                shap: Not installed
2025-08-18 21:25:44,525:INFO:           interpret: Not installed
2025-08-18 21:25:44,525:INFO:                umap: Not installed
2025-08-18 21:25:44,525:INFO:     ydata_profiling: Not installed
2025-08-18 21:25:44,525:INFO:  explainerdashboard: Not installed
2025-08-18 21:25:44,525:INFO:             autoviz: Not installed
2025-08-18 21:25:44,525:INFO:           fairlearn: Not installed
2025-08-18 21:25:44,525:INFO:          deepchecks: Not installed
2025-08-18 21:25:44,525:INFO:             xgboost: Not installed
2025-08-18 21:25:44,525:INFO:            catboost: Not installed
2025-08-18 21:25:44,525:INFO:              kmodes: Not installed
2025-08-18 21:25:44,525:INFO:             mlxtend: Not installed
2025-08-18 21:25:44,525:INFO:       statsforecast: Not installed
2025-08-18 21:25:44,525:INFO:        tune_sklearn: Not installed
2025-08-18 21:25:44,525:INFO:                 ray: Not installed
2025-08-18 21:25:44,525:INFO:            hyperopt: Not installed
2025-08-18 21:25:44,525:INFO:              optuna: Not installed
2025-08-18 21:25:44,525:INFO:               skopt: Not installed
2025-08-18 21:25:44,525:INFO:              mlflow: Not installed
2025-08-18 21:25:44,525:INFO:              gradio: Not installed
2025-08-18 21:25:44,525:INFO:             fastapi: Not installed
2025-08-18 21:25:44,525:INFO:             uvicorn: Not installed
2025-08-18 21:25:44,525:INFO:              m2cgen: Not installed
2025-08-18 21:25:44,525:INFO:           evidently: Not installed
2025-08-18 21:25:44,525:INFO:               fugue: Not installed
2025-08-18 21:25:44,525:INFO:           streamlit: 1.48.1
2025-08-18 21:25:44,525:INFO:             prophet: Not installed
2025-08-18 21:25:44,525:INFO:None
2025-08-18 21:25:44,525:INFO:Set up data.
2025-08-18 21:25:44,528:INFO:Set up folding strategy.
2025-08-18 21:25:44,528:INFO:Set up train/test split.
2025-08-18 21:25:44,535:INFO:Set up index.
2025-08-18 21:25:44,535:INFO:Assigning column types.
2025-08-18 21:25:44,537:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-08-18 21:25:44,553:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-18 21:25:44,554:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-18 21:25:44,566:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 21:25:44,566:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 21:25:44,583:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-18 21:25:44,583:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-18 21:25:44,594:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 21:25:44,594:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 21:25:44,594:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-08-18 21:25:44,611:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-18 21:25:44,621:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 21:25:44,621:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 21:25:44,638:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-18 21:25:44,649:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 21:25:44,649:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 21:25:44,649:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-08-18 21:25:44,676:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 21:25:44,676:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 21:25:44,703:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 21:25:44,704:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 21:25:44,704:INFO:Preparing preprocessing pipeline...
2025-08-18 21:25:44,705:INFO:Set up label encoding.
2025-08-18 21:25:44,705:INFO:Set up simple imputation.
2025-08-18 21:25:44,715:INFO:Finished creating preprocessing pipeline.
2025-08-18 21:25:44,717:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/33/8s2ttfyd7170lv2_ww0lccmw0000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address',
                                             'Abnormal_U...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-08-18 21:25:44,717:INFO:Creating final display dataframe.
2025-08-18 21:25:44,743:INFO:Setup _display_container:                     Description                    Value
0                    Session id                       42
1                        Target                    label
2                   Target type                   Binary
3                Target mapping  BENIGN: 0, MALICIOUS: 1
4           Original data shape               (3600, 12)
5        Transformed data shape               (3600, 12)
6   Transformed train set shape               (2520, 12)
7    Transformed test set shape               (1080, 12)
8              Numeric features                       11
9                    Preprocess                     True
10              Imputation type                   simple
11           Numeric imputation                     mean
12       Categorical imputation                     mode
13               Fold Generator          StratifiedKFold
14                  Fold Number                       10
15                     CPU Jobs                       -1
16                      Use GPU                    False
17               Log Experiment                    False
18              Experiment Name         clf-default-name
19                          USI                     7cb9
2025-08-18 21:25:44,771:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 21:25:44,771:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 21:25:44,799:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 21:25:44,799:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 21:25:44,799:INFO:setup() successfully completed in 0.31s...............
2025-08-18 21:25:44,799:INFO:Initializing create_model()
2025-08-18 21:25:44,799:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30097aad0>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-18 21:25:44,799:INFO:Checking exceptions
2025-08-18 21:25:44,814:INFO:Importing libraries
2025-08-18 21:25:44,814:INFO:Copying training dataset
2025-08-18 21:25:44,817:INFO:Defining folds
2025-08-18 21:25:44,817:INFO:Declaring metric variables
2025-08-18 21:25:44,817:INFO:Importing untrained model
2025-08-18 21:25:44,817:INFO:Logistic Regression Imported successfully
2025-08-18 21:25:44,817:INFO:Starting cross validation
2025-08-18 21:25:44,818:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-18 21:25:47,020:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:25:47,022:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:25:47,023:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:25:47,040:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:25:47,042:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:25:47,043:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:25:47,056:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:25:47,058:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:25:47,059:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:25:47,071:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:25:47,073:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:25:47,074:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:25:47,076:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:25:47,077:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:25:47,078:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:25:47,084:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:25:47,085:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:25:47,086:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:25:47,088:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:25:47,089:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:25:47,091:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:25:47,115:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:25:47,116:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:25:47,118:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:25:47,137:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:25:47,139:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:25:47,140:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:25:47,174:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:25:47,175:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:25:47,177:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:25:47,188:INFO:Calculating mean and std
2025-08-18 21:25:47,189:INFO:Creating metrics dataframe
2025-08-18 21:25:47,191:INFO:Finalizing model
2025-08-18 21:25:47,277:INFO:Uploading results into container
2025-08-18 21:25:47,278:INFO:Uploading model into container now
2025-08-18 21:25:47,281:INFO:_master_model_container: 1
2025-08-18 21:25:47,281:INFO:_display_container: 2
2025-08-18 21:25:47,281:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-18 21:25:47,281:INFO:create_model() successfully completed......................................
2025-08-18 21:25:47,344:INFO:Initializing finalize_model()
2025-08-18 21:25:47,344:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30097aad0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-18 21:25:47,344:INFO:Finalizing LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-18 21:25:47,346:INFO:Initializing create_model()
2025-08-18 21:25:47,346:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30097aad0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-18 21:25:47,346:INFO:Checking exceptions
2025-08-18 21:25:47,346:INFO:Importing libraries
2025-08-18 21:25:47,346:INFO:Copying training dataset
2025-08-18 21:25:47,346:INFO:Defining folds
2025-08-18 21:25:47,346:INFO:Declaring metric variables
2025-08-18 21:25:47,346:INFO:Importing untrained model
2025-08-18 21:25:47,346:INFO:Declaring custom model
2025-08-18 21:25:47,346:INFO:Logistic Regression Imported successfully
2025-08-18 21:25:47,347:INFO:Cross validation set to False
2025-08-18 21:25:47,347:INFO:Fitting Model
2025-08-18 21:25:47,375:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address',
                                             'Abnormal_URL', 'HTTPS_token',
                                             'URL_Length', 'URL_of_Anchor',
                                             'Page_Ra...
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=42,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-08-18 21:25:47,375:INFO:create_model() successfully completed......................................
2025-08-18 21:25:47,429:INFO:_master_model_container: 1
2025-08-18 21:25:47,429:INFO:_display_container: 2
2025-08-18 21:25:47,430:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address',
                                             'Abnormal_URL', 'HTTPS_token',
                                             'URL_Length', 'URL_of_Anchor',
                                             'Page_Ra...
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=42,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-08-18 21:25:47,430:INFO:finalize_model() successfully completed......................................
2025-08-18 21:25:47,480:INFO:Initializing save_model()
2025-08-18 21:25:47,480:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address',
                                             'Abnormal_URL', 'HTTPS_token',
                                             'URL_Length', 'URL_of_Anchor',
                                             'Page_Ra...
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=42,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), model_name=artifacts/phishing_url_detector, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/33/8s2ttfyd7170lv2_ww0lccmw0000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address',
                                             'Abnormal_U...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-08-18 21:25:47,480:INFO:Adding model into prep_pipe
2025-08-18 21:25:47,480:WARNING:Only Model saved as it was a pipeline.
2025-08-18 21:25:47,481:INFO:artifacts/phishing_url_detector.pkl saved in current working directory
2025-08-18 21:25:47,484:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address',
                                             'Abnormal_URL', 'HTTPS_token',
                                             'URL_Length', 'URL_of_Anchor',
                                             'Page_Ra...
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=42,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-08-18 21:25:47,484:INFO:save_model() successfully completed......................................
2025-08-18 21:25:47,523:INFO:PyCaret ClusteringExperiment
2025-08-18 21:25:47,523:INFO:Logging name: cluster-default-name
2025-08-18 21:25:47,523:INFO:ML Usecase: MLUsecase.CLUSTERING
2025-08-18 21:25:47,523:INFO:version 3.3.2
2025-08-18 21:25:47,523:INFO:Initializing setup()
2025-08-18 21:25:47,523:INFO:self.USI: bf51
2025-08-18 21:25:47,523:INFO:self._variable_keys: {'USI', 'idx', 'html_param', 'pipeline', 'seed', 'exp_name_log', '_available_plots', 'exp_id', 'gpu_param', 'gpu_n_jobs_param', 'log_plots_param', '_ml_usecase', 'data', 'memory', 'X', 'n_jobs_param', 'logging_param'}
2025-08-18 21:25:47,523:INFO:Checking environment
2025-08-18 21:25:47,523:INFO:python_version: 3.11.13
2025-08-18 21:25:47,523:INFO:python_build: ('main', 'Jun  3 2025 18:38:25')
2025-08-18 21:25:47,523:INFO:machine: arm64
2025-08-18 21:25:47,523:INFO:platform: macOS-15.6-arm64-arm-64bit
2025-08-18 21:25:47,523:INFO:Memory: svmem(total=17179869184, available=4811997184, percent=72.0, used=6956318720, free=72384512, active=4749590528, inactive=4714856448, wired=2206728192)
2025-08-18 21:25:47,523:INFO:Physical Core: 8
2025-08-18 21:25:47,523:INFO:Logical Core: 8
2025-08-18 21:25:47,523:INFO:Checking libraries
2025-08-18 21:25:47,524:INFO:System:
2025-08-18 21:25:47,524:INFO:    python: 3.11.13 (main, Jun  3 2025, 18:38:25) [Clang 17.0.0 (clang-1700.0.13.3)]
2025-08-18 21:25:47,524:INFO:executable: /Users/ruslaniakupov/Downloads/SOAR/.venv/bin/python
2025-08-18 21:25:47,524:INFO:   machine: macOS-15.6-arm64-arm-64bit
2025-08-18 21:25:47,524:INFO:PyCaret required dependencies:
2025-08-18 21:25:47,524:INFO:                 pip: 25.2
2025-08-18 21:25:47,524:INFO:          setuptools: 80.9.0
2025-08-18 21:25:47,524:INFO:             pycaret: 3.3.2
2025-08-18 21:25:47,524:INFO:             IPython: 9.4.0
2025-08-18 21:25:47,524:INFO:          ipywidgets: 8.1.7
2025-08-18 21:25:47,524:INFO:                tqdm: 4.67.1
2025-08-18 21:25:47,524:INFO:               numpy: 1.26.4
2025-08-18 21:25:47,524:INFO:              pandas: 2.1.4
2025-08-18 21:25:47,524:INFO:              jinja2: 3.1.6
2025-08-18 21:25:47,524:INFO:               scipy: 1.11.4
2025-08-18 21:25:47,524:INFO:              joblib: 1.3.2
2025-08-18 21:25:47,524:INFO:             sklearn: 1.4.2
2025-08-18 21:25:47,524:INFO:                pyod: 2.0.5
2025-08-18 21:25:47,524:INFO:            imblearn: 0.14.0
2025-08-18 21:25:47,524:INFO:   category_encoders: 2.7.0
2025-08-18 21:25:47,524:INFO:            lightgbm: 4.6.0
2025-08-18 21:25:47,524:INFO:               numba: 0.61.2
2025-08-18 21:25:47,524:INFO:            requests: 2.32.4
2025-08-18 21:25:47,524:INFO:          matplotlib: 3.7.5
2025-08-18 21:25:47,524:INFO:          scikitplot: 0.3.7
2025-08-18 21:25:47,524:INFO:         yellowbrick: 1.5
2025-08-18 21:25:47,524:INFO:              plotly: 5.24.1
2025-08-18 21:25:47,524:INFO:    plotly-resampler: Not installed
2025-08-18 21:25:47,524:INFO:             kaleido: 1.0.0
2025-08-18 21:25:47,524:INFO:           schemdraw: 0.15
2025-08-18 21:25:47,524:INFO:         statsmodels: 0.14.5
2025-08-18 21:25:47,524:INFO:              sktime: 0.26.0
2025-08-18 21:25:47,524:INFO:               tbats: 1.1.3
2025-08-18 21:25:47,524:INFO:            pmdarima: 2.0.4
2025-08-18 21:25:47,524:INFO:              psutil: 7.0.0
2025-08-18 21:25:47,524:INFO:          markupsafe: 3.0.2
2025-08-18 21:25:47,524:INFO:             pickle5: Not installed
2025-08-18 21:25:47,524:INFO:         cloudpickle: 3.1.1
2025-08-18 21:25:47,526:INFO:         deprecation: 2.1.0
2025-08-18 21:25:47,526:INFO:              xxhash: 3.5.0
2025-08-18 21:25:47,526:INFO:           wurlitzer: 3.1.1
2025-08-18 21:25:47,526:INFO:PyCaret optional dependencies:
2025-08-18 21:25:47,526:INFO:                shap: Not installed
2025-08-18 21:25:47,526:INFO:           interpret: Not installed
2025-08-18 21:25:47,526:INFO:                umap: Not installed
2025-08-18 21:25:47,526:INFO:     ydata_profiling: Not installed
2025-08-18 21:25:47,526:INFO:  explainerdashboard: Not installed
2025-08-18 21:25:47,526:INFO:             autoviz: Not installed
2025-08-18 21:25:47,526:INFO:           fairlearn: Not installed
2025-08-18 21:25:47,526:INFO:          deepchecks: Not installed
2025-08-18 21:25:47,526:INFO:             xgboost: Not installed
2025-08-18 21:25:47,526:INFO:            catboost: Not installed
2025-08-18 21:25:47,526:INFO:              kmodes: Not installed
2025-08-18 21:25:47,526:INFO:             mlxtend: Not installed
2025-08-18 21:25:47,526:INFO:       statsforecast: Not installed
2025-08-18 21:25:47,526:INFO:        tune_sklearn: Not installed
2025-08-18 21:25:47,526:INFO:                 ray: Not installed
2025-08-18 21:25:47,526:INFO:            hyperopt: Not installed
2025-08-18 21:25:47,526:INFO:              optuna: Not installed
2025-08-18 21:25:47,526:INFO:               skopt: Not installed
2025-08-18 21:25:47,526:INFO:              mlflow: Not installed
2025-08-18 21:25:47,526:INFO:              gradio: Not installed
2025-08-18 21:25:47,526:INFO:             fastapi: Not installed
2025-08-18 21:25:47,526:INFO:             uvicorn: Not installed
2025-08-18 21:25:47,526:INFO:              m2cgen: Not installed
2025-08-18 21:25:47,526:INFO:           evidently: Not installed
2025-08-18 21:25:47,526:INFO:               fugue: Not installed
2025-08-18 21:25:47,526:INFO:           streamlit: 1.48.1
2025-08-18 21:25:47,526:INFO:             prophet: Not installed
2025-08-18 21:25:47,526:INFO:None
2025-08-18 21:25:47,526:INFO:Set up data.
2025-08-18 21:25:47,529:INFO:Set up index.
2025-08-18 21:25:47,536:INFO:Assigning column types.
2025-08-18 21:25:47,537:INFO:Engine successfully changes for model 'kmeans' to 'sklearn'.
2025-08-18 21:25:47,537:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-08-18 21:25:47,538:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 21:25:47,538:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-08-18 21:25:47,538:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 21:25:47,538:INFO:Engine successfully changes for model 'dbscan' to 'sklearn'.
2025-08-18 21:25:47,538:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 21:25:47,538:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 21:25:47,539:INFO:Preparing preprocessing pipeline...
2025-08-18 21:25:47,539:INFO:Set up simple imputation.
2025-08-18 21:25:47,553:INFO:Finished creating preprocessing pipeline.
2025-08-18 21:25:47,555:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/33/8s2ttfyd7170lv2_ww0lccmw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address',
                                             'Abnormal_URL', 'HTTPS_token',
                                             'URL_Length', 'URL_of_Anchor',
                                             'Page_Rank', 'Request_URL',
                                             'has_political_keyword'],
                                    trans...SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-08-18 21:25:47,555:INFO:Creating final display dataframe.
2025-08-18 21:25:47,560:INFO:Setup _display_container:                Description                 Value
0               Session id                    42
1      Original data shape            (3600, 11)
2   Transformed data shape            (3600, 11)
3         Numeric features                    11
4               Preprocess                  True
5          Imputation type                simple
6       Numeric imputation                  mean
7   Categorical imputation                  mode
8                 CPU Jobs                    -1
9                  Use GPU                 False
10          Log Experiment                 False
11         Experiment Name  cluster-default-name
12                     USI                  bf51
2025-08-18 21:25:47,560:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 21:25:47,560:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 21:25:47,560:INFO:setup() successfully completed in 0.04s...............
2025-08-18 21:25:47,560:INFO:Initializing create_model()
2025-08-18 21:25:47,560:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x300ae38d0>, estimator=kmeans, num_clusters=3, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={'random_state': 42})
2025-08-18 21:25:47,560:INFO:Checking exceptions
2025-08-18 21:25:47,566:INFO:Importing untrained model
2025-08-18 21:25:47,566:INFO:K-Means Clustering Imported successfully
2025-08-18 21:25:47,566:INFO:Fitting Model
2025-08-18 21:25:48,007:INFO:KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=3, n_init='auto', random_state=42, tol=0.0001, verbose=0)
2025-08-18 21:25:48,007:INFO:create_models() successfully completed......................................
2025-08-18 21:25:48,007:INFO:Uploading results into container
2025-08-18 21:25:48,008:INFO:Uploading model into container now
2025-08-18 21:25:48,014:INFO:_master_model_container: 1
2025-08-18 21:25:48,014:INFO:_display_container: 2
2025-08-18 21:25:48,015:INFO:KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=3, n_init='auto', random_state=42, tol=0.0001, verbose=0)
2025-08-18 21:25:48,015:INFO:create_model() successfully completed......................................
2025-08-18 21:25:48,097:INFO:Initializing save_model()
2025-08-18 21:25:48,097:INFO:save_model(model=KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=3, n_init='auto', random_state=42, tol=0.0001, verbose=0), model_name=artifacts/threat_actor_profiler, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/33/8s2ttfyd7170lv2_ww0lccmw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address',
                                             'Abnormal_URL', 'HTTPS_token',
                                             'URL_Length', 'URL_of_Anchor',
                                             'Page_Rank', 'Request_URL',
                                             'has_political_keyword'],
                                    trans...SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLUSTERING, kwargs={})
2025-08-18 21:25:48,097:INFO:Adding model into prep_pipe
2025-08-18 21:25:48,099:INFO:artifacts/threat_actor_profiler.pkl saved in current working directory
2025-08-18 21:25:48,100:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address',
                                             'Abnormal_URL', 'HTTPS_token',
                                             'URL_Length', 'URL_of_Anchor',
                                             'Page_Rank', 'Request_URL',
                                             'has_political_keyword'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('trained_model',
                 KMeans(algorithm='lloyd', copy_x=True, init='k-means++',
                        max_iter=300, n_clusters=3, n_init='auto',
                        random_state=42, tol=0.0001, verbose=0))],
         verbose=False)
2025-08-18 21:25:48,100:INFO:save_model() successfully completed......................................
2025-08-18 21:25:48,150:INFO:Initializing assign_model()
2025-08-18 21:25:48,150:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x300ae38d0>, model=KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=3, n_init='auto', random_state=42, tol=0.0001, verbose=0), transformation=False, score=True, verbose=True)
2025-08-18 21:25:48,150:INFO:Checking exceptions
2025-08-18 21:25:48,150:INFO:Determining Trained Model
2025-08-18 21:25:48,150:INFO:Trained Model : K-Means Clustering
2025-08-18 21:25:48,150:INFO:Copying data
2025-08-18 21:25:48,152:INFO:(3600, 12)
2025-08-18 21:25:48,152:INFO:assign_model() successfully completed......................................
2025-08-18 21:29:09,620:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-18 21:29:09,620:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-18 21:29:09,620:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-18 21:29:09,620:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-18 21:30:03,113:INFO:Initializing load_model()
2025-08-18 21:30:03,114:INFO:load_model(model_name=artifacts/phishing_url_detector, platform=None, authentication=None, verbose=True)
2025-08-18 21:30:03,153:INFO:Initializing load_model()
2025-08-18 21:30:03,153:INFO:load_model(model_name=artifacts/threat_actor_profiler, platform=None, authentication=None, verbose=True)
2025-08-18 21:30:03,159:INFO:Initializing predict_model()
2025-08-18 21:30:03,159:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x106d4f0d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address',
                                             'Abnormal_URL', 'HTTPS_token',
                                             'URL_Length', 'URL_of_Anchor',
                                             'Page_Rank', 'Request_URL',
                                             'has_political_keyword'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x304d776a0>)
2025-08-18 21:30:03,159:INFO:Checking exceptions
2025-08-18 21:30:03,159:INFO:Preloading libraries
2025-08-18 21:30:03,160:INFO:Set up data.
2025-08-18 21:30:03,162:INFO:Set up index.
2025-08-18 21:30:03,232:INFO:Initializing predict_model()
2025-08-18 21:30:03,232:INFO:predict_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x304a16050>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address',
                                             'Abnormal_URL', 'HTTPS_token',
                                             'URL_Length', 'URL_of_Anchor',
                                             'Page_Rank', 'Request_URL',
                                             'has_political_keyword'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model', KMeans(n_clusters=3, random_state=42))]), ml_usecase=None)
2025-08-18 21:30:03,232:INFO:Set up data.
2025-08-18 21:30:47,183:INFO:Initializing predict_model()
2025-08-18 21:30:47,184:INFO:predict_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x305e73f90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address',
                                             'Abnormal_URL', 'HTTPS_token',
                                             'URL_Length', 'URL_of_Anchor',
                                             'Page_Rank', 'Request_URL',
                                             'has_political_keyword'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model', KMeans(n_clusters=3, random_state=42))]), ml_usecase=None)
2025-08-18 21:30:47,184:INFO:Set up data.
2025-08-18 21:30:47,791:INFO:Initializing predict_model()
2025-08-18 21:30:47,791:INFO:predict_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x304a094d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address',
                                             'Abnormal_URL', 'HTTPS_token',
                                             'URL_Length', 'URL_of_Anchor',
                                             'Page_Rank', 'Request_URL',
                                             'has_political_keyword'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model', KMeans(n_clusters=3, random_state=42))]), ml_usecase=None)
2025-08-18 21:30:47,791:INFO:Set up data.
2025-08-18 21:30:48,536:INFO:Initializing predict_model()
2025-08-18 21:30:48,536:INFO:predict_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x304d2f410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address',
                                             'Abnormal_URL', 'HTTPS_token',
                                             'URL_Length', 'URL_of_Anchor',
                                             'Page_Rank', 'Request_URL',
                                             'has_political_keyword'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model', KMeans(n_clusters=3, random_state=42))]), ml_usecase=None)
2025-08-18 21:30:48,536:INFO:Set up data.
2025-08-18 21:30:57,168:INFO:Initializing predict_model()
2025-08-18 21:30:57,168:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x304d4d150>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address',
                                             'Abnormal_URL', 'HTTPS_token',
                                             'URL_Length', 'URL_of_Anchor',
                                             'Page_Rank', 'Request_URL',
                                             'has_political_keyword'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x304df6ac0>)
2025-08-18 21:30:57,168:INFO:Checking exceptions
2025-08-18 21:30:57,168:INFO:Preloading libraries
2025-08-18 21:30:57,168:INFO:Set up data.
2025-08-18 21:30:57,172:INFO:Set up index.
2025-08-18 21:30:57,236:INFO:Initializing predict_model()
2025-08-18 21:30:57,236:INFO:predict_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x304a1a7d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address',
                                             'Abnormal_URL', 'HTTPS_token',
                                             'URL_Length', 'URL_of_Anchor',
                                             'Page_Rank', 'Request_URL',
                                             'has_political_keyword'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model', KMeans(n_clusters=3, random_state=42))]), ml_usecase=None)
2025-08-18 21:30:57,236:INFO:Set up data.
2025-08-18 21:31:00,794:INFO:Initializing predict_model()
2025-08-18 21:31:00,794:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x304a17a50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address',
                                             'Abnormal_URL', 'HTTPS_token',
                                             'URL_Length', 'URL_of_Anchor',
                                             'Page_Rank', 'Request_URL',
                                             'has_political_keyword'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x304df7c40>)
2025-08-18 21:31:00,794:INFO:Checking exceptions
2025-08-18 21:31:00,794:INFO:Preloading libraries
2025-08-18 21:31:00,796:INFO:Set up data.
2025-08-18 21:31:00,799:INFO:Set up index.
2025-08-18 21:31:00,872:INFO:Initializing predict_model()
2025-08-18 21:31:00,872:INFO:predict_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x304a0b190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address',
                                             'Abnormal_URL', 'HTTPS_token',
                                             'URL_Length', 'URL_of_Anchor',
                                             'Page_Rank', 'Request_URL',
                                             'has_political_keyword'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model', KMeans(n_clusters=3, random_state=42))]), ml_usecase=None)
2025-08-18 21:31:00,872:INFO:Set up data.
2025-08-18 21:31:02,912:INFO:Initializing predict_model()
2025-08-18 21:31:02,912:INFO:predict_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x304d2ea50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address',
                                             'Abnormal_URL', 'HTTPS_token',
                                             'URL_Length', 'URL_of_Anchor',
                                             'Page_Rank', 'Request_URL',
                                             'has_political_keyword'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model', KMeans(n_clusters=3, random_state=42))]), ml_usecase=None)
2025-08-18 21:31:02,912:INFO:Set up data.
2025-08-18 21:31:03,213:INFO:Initializing predict_model()
2025-08-18 21:31:03,213:INFO:predict_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x304c07150>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address',
                                             'Abnormal_URL', 'HTTPS_token',
                                             'URL_Length', 'URL_of_Anchor',
                                             'Page_Rank', 'Request_URL',
                                             'has_political_keyword'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model', KMeans(n_clusters=3, random_state=42))]), ml_usecase=None)
2025-08-18 21:31:03,213:INFO:Set up data.
2025-08-18 21:31:04,132:INFO:Initializing predict_model()
2025-08-18 21:31:04,133:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x304a0b910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address',
                                             'Abnormal_URL', 'HTTPS_token',
                                             'URL_Length', 'URL_of_Anchor',
                                             'Page_Rank', 'Request_URL',
                                             'has_political_keyword'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x304df7100>)
2025-08-18 21:31:04,133:INFO:Checking exceptions
2025-08-18 21:31:04,133:INFO:Preloading libraries
2025-08-18 21:31:04,133:INFO:Set up data.
2025-08-18 21:31:04,137:INFO:Set up index.
2025-08-18 21:31:04,201:INFO:Initializing predict_model()
2025-08-18 21:31:04,202:INFO:predict_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x304d4cf90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address',
                                             'Abnormal_URL', 'HTTPS_token',
                                             'URL_Length', 'URL_of_Anchor',
                                             'Page_Rank', 'Request_URL',
                                             'has_political_keyword'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model', KMeans(n_clusters=3, random_state=42))]), ml_usecase=None)
2025-08-18 21:31:04,202:INFO:Set up data.
2025-08-18 21:31:16,995:INFO:Initializing predict_model()
2025-08-18 21:31:16,996:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x304cf3790>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address',
                                             'Abnormal_URL', 'HTTPS_token',
                                             'URL_Length', 'URL_of_Anchor',
                                             'Page_Rank', 'Request_URL',
                                             'has_political_keyword'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x304df7920>)
2025-08-18 21:31:16,997:INFO:Checking exceptions
2025-08-18 21:31:16,997:INFO:Preloading libraries
2025-08-18 21:31:16,997:INFO:Set up data.
2025-08-18 21:31:16,999:INFO:Set up index.
2025-08-18 21:31:17,060:INFO:Initializing predict_model()
2025-08-18 21:31:17,061:INFO:predict_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x305f075d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address',
                                             'Abnormal_URL', 'HTTPS_token',
                                             'URL_Length', 'URL_of_Anchor',
                                             'Page_Rank', 'Request_URL',
                                             'has_political_keyword'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model', KMeans(n_clusters=3, random_state=42))]), ml_usecase=None)
2025-08-18 21:31:17,061:INFO:Set up data.
2025-08-18 21:35:36,411:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-18 21:35:36,412:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-18 21:35:36,412:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-18 21:35:36,412:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-18 21:35:47,931:INFO:Initializing load_model()
2025-08-18 21:35:47,931:INFO:load_model(model_name=artifacts/phishing_url_detector, platform=None, authentication=None, verbose=True)
2025-08-18 21:35:47,982:INFO:Initializing load_model()
2025-08-18 21:35:47,982:INFO:load_model(model_name=artifacts/threat_actor_profiler, platform=None, authentication=None, verbose=True)
2025-08-18 21:35:47,988:INFO:Initializing predict_model()
2025-08-18 21:35:47,988:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1068cae10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address',
                                             'Abnormal_URL', 'HTTPS_token',
                                             'URL_Length', 'URL_of_Anchor',
                                             'Page_Rank', 'Request_URL',
                                             'has_political_keyword'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x303e1b1a0>)
2025-08-18 21:35:47,988:INFO:Checking exceptions
2025-08-18 21:35:47,988:INFO:Preloading libraries
2025-08-18 21:35:47,988:INFO:Set up data.
2025-08-18 21:35:47,989:INFO:Set up index.
2025-08-18 21:35:48,040:INFO:Initializing predict_model()
2025-08-18 21:35:48,040:INFO:predict_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x303e55d90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address',
                                             'Abnormal_URL', 'HTTPS_token',
                                             'URL_Length', 'URL_of_Anchor',
                                             'Page_Rank', 'Request_URL',
                                             'has_political_keyword'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model', KMeans(n_clusters=3, random_state=42))]), ml_usecase=None)
2025-08-18 21:35:48,040:INFO:Set up data.
2025-08-18 21:47:31,297:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-18 21:47:31,297:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-18 21:47:31,297:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-18 21:47:31,297:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-18 21:47:32,107:INFO:PyCaret ClassificationExperiment
2025-08-18 21:47:32,107:INFO:Logging name: clf-default-name
2025-08-18 21:47:32,108:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-08-18 21:47:32,108:INFO:version 3.3.2
2025-08-18 21:47:32,108:INFO:Initializing setup()
2025-08-18 21:47:32,108:INFO:self.USI: 4c76
2025-08-18 21:47:32,108:INFO:self._variable_keys: {'X', 'pipeline', 'y_train', 'fold_generator', 'gpu_n_jobs_param', '_available_plots', 'y', 'target_param', 'html_param', 'X_test', 'logging_param', 'log_plots_param', 'fold_groups_param', 'seed', 'fold_shuffle_param', 'USI', 'fix_imbalance', 'memory', 'n_jobs_param', 'gpu_param', 'X_train', 'is_multiclass', '_ml_usecase', 'exp_id', 'exp_name_log', 'data', 'idx', 'y_test'}
2025-08-18 21:47:32,108:INFO:Checking environment
2025-08-18 21:47:32,108:INFO:python_version: 3.11.13
2025-08-18 21:47:32,108:INFO:python_build: ('main', 'Jun  3 2025 18:38:25')
2025-08-18 21:47:32,108:INFO:machine: arm64
2025-08-18 21:47:32,125:INFO:platform: macOS-15.6-arm64-arm-64bit
2025-08-18 21:47:32,125:INFO:Memory: svmem(total=17179869184, available=4901453824, percent=71.5, used=7047217152, free=94928896, active=4815454208, inactive=4685529088, wired=2231762944)
2025-08-18 21:47:32,125:INFO:Physical Core: 8
2025-08-18 21:47:32,125:INFO:Logical Core: 8
2025-08-18 21:47:32,125:INFO:Checking libraries
2025-08-18 21:47:32,125:INFO:System:
2025-08-18 21:47:32,125:INFO:    python: 3.11.13 (main, Jun  3 2025, 18:38:25) [Clang 17.0.0 (clang-1700.0.13.3)]
2025-08-18 21:47:32,125:INFO:executable: /Users/ruslaniakupov/Downloads/SOAR/.venv/bin/python
2025-08-18 21:47:32,125:INFO:   machine: macOS-15.6-arm64-arm-64bit
2025-08-18 21:47:32,125:INFO:PyCaret required dependencies:
2025-08-18 21:47:32,147:INFO:                 pip: 25.2
2025-08-18 21:47:32,147:INFO:          setuptools: 80.9.0
2025-08-18 21:47:32,147:INFO:             pycaret: 3.3.2
2025-08-18 21:47:32,147:INFO:             IPython: 9.4.0
2025-08-18 21:47:32,147:INFO:          ipywidgets: 8.1.7
2025-08-18 21:47:32,147:INFO:                tqdm: 4.67.1
2025-08-18 21:47:32,147:INFO:               numpy: 1.26.4
2025-08-18 21:47:32,147:INFO:              pandas: 2.1.4
2025-08-18 21:47:32,147:INFO:              jinja2: 3.1.6
2025-08-18 21:47:32,147:INFO:               scipy: 1.11.4
2025-08-18 21:47:32,147:INFO:              joblib: 1.3.2
2025-08-18 21:47:32,147:INFO:             sklearn: 1.4.2
2025-08-18 21:47:32,147:INFO:                pyod: 2.0.5
2025-08-18 21:47:32,147:INFO:            imblearn: 0.14.0
2025-08-18 21:47:32,147:INFO:   category_encoders: 2.7.0
2025-08-18 21:47:32,147:INFO:            lightgbm: 4.6.0
2025-08-18 21:47:32,147:INFO:               numba: 0.61.2
2025-08-18 21:47:32,147:INFO:            requests: 2.32.4
2025-08-18 21:47:32,147:INFO:          matplotlib: 3.7.5
2025-08-18 21:47:32,147:INFO:          scikitplot: 0.3.7
2025-08-18 21:47:32,147:INFO:         yellowbrick: 1.5
2025-08-18 21:47:32,147:INFO:              plotly: 5.24.1
2025-08-18 21:47:32,147:INFO:    plotly-resampler: Not installed
2025-08-18 21:47:32,147:INFO:             kaleido: 1.0.0
2025-08-18 21:47:32,147:INFO:           schemdraw: 0.15
2025-08-18 21:47:32,147:INFO:         statsmodels: 0.14.5
2025-08-18 21:47:32,147:INFO:              sktime: 0.26.0
2025-08-18 21:47:32,147:INFO:               tbats: 1.1.3
2025-08-18 21:47:32,147:INFO:            pmdarima: 2.0.4
2025-08-18 21:47:32,147:INFO:              psutil: 7.0.0
2025-08-18 21:47:32,147:INFO:          markupsafe: 3.0.2
2025-08-18 21:47:32,147:INFO:             pickle5: Not installed
2025-08-18 21:47:32,147:INFO:         cloudpickle: 3.1.1
2025-08-18 21:47:32,147:INFO:         deprecation: 2.1.0
2025-08-18 21:47:32,147:INFO:              xxhash: 3.5.0
2025-08-18 21:47:32,147:INFO:           wurlitzer: 3.1.1
2025-08-18 21:47:32,147:INFO:PyCaret optional dependencies:
2025-08-18 21:47:32,152:INFO:                shap: Not installed
2025-08-18 21:47:32,152:INFO:           interpret: Not installed
2025-08-18 21:47:32,152:INFO:                umap: Not installed
2025-08-18 21:47:32,152:INFO:     ydata_profiling: Not installed
2025-08-18 21:47:32,152:INFO:  explainerdashboard: Not installed
2025-08-18 21:47:32,152:INFO:             autoviz: Not installed
2025-08-18 21:47:32,152:INFO:           fairlearn: Not installed
2025-08-18 21:47:32,152:INFO:          deepchecks: Not installed
2025-08-18 21:47:32,152:INFO:             xgboost: Not installed
2025-08-18 21:47:32,152:INFO:            catboost: Not installed
2025-08-18 21:47:32,152:INFO:              kmodes: Not installed
2025-08-18 21:47:32,152:INFO:             mlxtend: Not installed
2025-08-18 21:47:32,152:INFO:       statsforecast: Not installed
2025-08-18 21:47:32,152:INFO:        tune_sklearn: Not installed
2025-08-18 21:47:32,152:INFO:                 ray: Not installed
2025-08-18 21:47:32,152:INFO:            hyperopt: Not installed
2025-08-18 21:47:32,152:INFO:              optuna: Not installed
2025-08-18 21:47:32,152:INFO:               skopt: Not installed
2025-08-18 21:47:32,152:INFO:              mlflow: Not installed
2025-08-18 21:47:32,152:INFO:              gradio: Not installed
2025-08-18 21:47:32,152:INFO:             fastapi: Not installed
2025-08-18 21:47:32,152:INFO:             uvicorn: Not installed
2025-08-18 21:47:32,152:INFO:              m2cgen: Not installed
2025-08-18 21:47:32,152:INFO:           evidently: Not installed
2025-08-18 21:47:32,152:INFO:               fugue: Not installed
2025-08-18 21:47:32,152:INFO:           streamlit: 1.48.1
2025-08-18 21:47:32,152:INFO:             prophet: Not installed
2025-08-18 21:47:32,152:INFO:None
2025-08-18 21:47:32,152:INFO:Set up data.
2025-08-18 21:47:32,156:INFO:Set up folding strategy.
2025-08-18 21:47:32,156:INFO:Set up train/test split.
2025-08-18 21:47:32,165:INFO:Set up index.
2025-08-18 21:47:32,165:INFO:Assigning column types.
2025-08-18 21:47:32,166:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-08-18 21:47:32,182:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-18 21:47:32,184:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-18 21:47:32,196:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 21:47:32,196:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 21:47:32,213:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-18 21:47:32,213:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-18 21:47:32,223:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 21:47:32,223:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 21:47:32,224:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-08-18 21:47:32,240:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-18 21:47:32,251:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 21:47:32,251:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 21:47:32,268:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-18 21:47:32,278:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 21:47:32,278:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 21:47:32,278:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-08-18 21:47:32,305:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 21:47:32,305:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 21:47:32,332:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 21:47:32,332:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 21:47:32,333:INFO:Preparing preprocessing pipeline...
2025-08-18 21:47:32,334:INFO:Set up label encoding.
2025-08-18 21:47:32,334:INFO:Set up simple imputation.
2025-08-18 21:47:32,344:INFO:Finished creating preprocessing pipeline.
2025-08-18 21:47:32,346:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/33/8s2ttfyd7170lv2_ww0lccmw0000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address',
                                             'Abnormal_U...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-08-18 21:47:32,346:INFO:Creating final display dataframe.
2025-08-18 21:47:32,372:INFO:Setup _display_container:                     Description                    Value
0                    Session id                       42
1                        Target                    label
2                   Target type                   Binary
3                Target mapping  BENIGN: 0, MALICIOUS: 1
4           Original data shape               (3600, 12)
5        Transformed data shape               (3600, 12)
6   Transformed train set shape               (2520, 12)
7    Transformed test set shape               (1080, 12)
8              Numeric features                       11
9                    Preprocess                     True
10              Imputation type                   simple
11           Numeric imputation                     mean
12       Categorical imputation                     mode
13               Fold Generator          StratifiedKFold
14                  Fold Number                       10
15                     CPU Jobs                       -1
16                      Use GPU                    False
17               Log Experiment                    False
18              Experiment Name         clf-default-name
19                          USI                     4c76
2025-08-18 21:47:32,400:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 21:47:32,400:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 21:47:32,427:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 21:47:32,427:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 21:47:32,427:INFO:setup() successfully completed in 0.32s...............
2025-08-18 21:47:32,427:INFO:Initializing create_model()
2025-08-18 21:47:32,427:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15ab79ad0>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-18 21:47:32,427:INFO:Checking exceptions
2025-08-18 21:47:32,443:INFO:Importing libraries
2025-08-18 21:47:32,443:INFO:Copying training dataset
2025-08-18 21:47:32,445:INFO:Defining folds
2025-08-18 21:47:32,445:INFO:Declaring metric variables
2025-08-18 21:47:32,445:INFO:Importing untrained model
2025-08-18 21:47:32,446:INFO:Logistic Regression Imported successfully
2025-08-18 21:47:32,446:INFO:Starting cross validation
2025-08-18 21:47:32,446:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-18 21:47:34,659:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:47:34,660:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:47:34,662:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:47:34,673:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:47:34,675:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:47:34,676:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:47:34,687:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:47:34,689:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:47:34,690:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:47:34,705:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:47:34,706:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:47:34,707:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:47:34,723:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:47:34,724:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:47:34,725:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:47:34,726:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:47:34,726:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:47:34,727:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:47:34,732:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:47:34,734:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:47:34,735:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:47:34,744:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:47:34,745:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:47:34,745:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:47:34,747:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:47:34,748:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:47:34,752:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:47:34,763:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:47:34,765:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:47:34,766:WARNING:/Users/ruslaniakupov/Downloads/SOAR/.venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 21:47:34,776:INFO:Calculating mean and std
2025-08-18 21:47:34,777:INFO:Creating metrics dataframe
2025-08-18 21:47:34,780:INFO:Finalizing model
2025-08-18 21:47:34,848:INFO:Uploading results into container
2025-08-18 21:47:34,849:INFO:Uploading model into container now
2025-08-18 21:47:34,856:INFO:_master_model_container: 1
2025-08-18 21:47:34,856:INFO:_display_container: 2
2025-08-18 21:47:34,857:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-18 21:47:34,857:INFO:create_model() successfully completed......................................
2025-08-18 21:47:34,913:INFO:Initializing finalize_model()
2025-08-18 21:47:34,913:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15ab79ad0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-18 21:47:34,914:INFO:Finalizing LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-18 21:47:34,915:INFO:Initializing create_model()
2025-08-18 21:47:34,915:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15ab79ad0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-18 21:47:34,915:INFO:Checking exceptions
2025-08-18 21:47:34,915:INFO:Importing libraries
2025-08-18 21:47:34,915:INFO:Copying training dataset
2025-08-18 21:47:34,915:INFO:Defining folds
2025-08-18 21:47:34,915:INFO:Declaring metric variables
2025-08-18 21:47:34,915:INFO:Importing untrained model
2025-08-18 21:47:34,915:INFO:Declaring custom model
2025-08-18 21:47:34,916:INFO:Logistic Regression Imported successfully
2025-08-18 21:47:34,916:INFO:Cross validation set to False
2025-08-18 21:47:34,916:INFO:Fitting Model
2025-08-18 21:47:34,942:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address',
                                             'Abnormal_URL', 'HTTPS_token',
                                             'URL_Length', 'URL_of_Anchor',
                                             'Page_Ra...
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=42,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-08-18 21:47:34,942:INFO:create_model() successfully completed......................................
2025-08-18 21:47:34,981:INFO:_master_model_container: 1
2025-08-18 21:47:34,981:INFO:_display_container: 2
2025-08-18 21:47:34,982:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address',
                                             'Abnormal_URL', 'HTTPS_token',
                                             'URL_Length', 'URL_of_Anchor',
                                             'Page_Ra...
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=42,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-08-18 21:47:34,982:INFO:finalize_model() successfully completed......................................
2025-08-18 21:47:35,027:INFO:Initializing save_model()
2025-08-18 21:47:35,028:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address',
                                             'Abnormal_URL', 'HTTPS_token',
                                             'URL_Length', 'URL_of_Anchor',
                                             'Page_Ra...
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=42,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), model_name=artifacts/phishing_url_detector, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/33/8s2ttfyd7170lv2_ww0lccmw0000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address',
                                             'Abnormal_U...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-08-18 21:47:35,028:INFO:Adding model into prep_pipe
2025-08-18 21:47:35,028:WARNING:Only Model saved as it was a pipeline.
2025-08-18 21:47:35,029:INFO:artifacts/phishing_url_detector.pkl saved in current working directory
2025-08-18 21:47:35,031:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address',
                                             'Abnormal_URL', 'HTTPS_token',
                                             'URL_Length', 'URL_of_Anchor',
                                             'Page_Ra...
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=42,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-08-18 21:47:35,031:INFO:save_model() successfully completed......................................
2025-08-18 21:47:35,070:INFO:PyCaret ClusteringExperiment
2025-08-18 21:47:35,070:INFO:Logging name: cluster-default-name
2025-08-18 21:47:35,070:INFO:ML Usecase: MLUsecase.CLUSTERING
2025-08-18 21:47:35,070:INFO:version 3.3.2
2025-08-18 21:47:35,070:INFO:Initializing setup()
2025-08-18 21:47:35,070:INFO:self.USI: deb2
2025-08-18 21:47:35,070:INFO:self._variable_keys: {'X', 'pipeline', 'gpu_n_jobs_param', '_available_plots', 'html_param', 'logging_param', 'log_plots_param', 'seed', 'USI', 'memory', 'n_jobs_param', 'gpu_param', '_ml_usecase', 'exp_id', 'exp_name_log', 'data', 'idx'}
2025-08-18 21:47:35,070:INFO:Checking environment
2025-08-18 21:47:35,070:INFO:python_version: 3.11.13
2025-08-18 21:47:35,070:INFO:python_build: ('main', 'Jun  3 2025 18:38:25')
2025-08-18 21:47:35,070:INFO:machine: arm64
2025-08-18 21:47:35,070:INFO:platform: macOS-15.6-arm64-arm-64bit
2025-08-18 21:47:35,070:INFO:Memory: svmem(total=17179869184, available=4276731904, percent=75.1, used=6535364608, free=59326464, active=4242145280, inactive=4152459264, wired=2293219328)
2025-08-18 21:47:35,070:INFO:Physical Core: 8
2025-08-18 21:47:35,070:INFO:Logical Core: 8
2025-08-18 21:47:35,070:INFO:Checking libraries
2025-08-18 21:47:35,070:INFO:System:
2025-08-18 21:47:35,070:INFO:    python: 3.11.13 (main, Jun  3 2025, 18:38:25) [Clang 17.0.0 (clang-1700.0.13.3)]
2025-08-18 21:47:35,070:INFO:executable: /Users/ruslaniakupov/Downloads/SOAR/.venv/bin/python
2025-08-18 21:47:35,070:INFO:   machine: macOS-15.6-arm64-arm-64bit
2025-08-18 21:47:35,070:INFO:PyCaret required dependencies:
2025-08-18 21:47:35,070:INFO:                 pip: 25.2
2025-08-18 21:47:35,070:INFO:          setuptools: 80.9.0
2025-08-18 21:47:35,070:INFO:             pycaret: 3.3.2
2025-08-18 21:47:35,070:INFO:             IPython: 9.4.0
2025-08-18 21:47:35,070:INFO:          ipywidgets: 8.1.7
2025-08-18 21:47:35,070:INFO:                tqdm: 4.67.1
2025-08-18 21:47:35,070:INFO:               numpy: 1.26.4
2025-08-18 21:47:35,070:INFO:              pandas: 2.1.4
2025-08-18 21:47:35,070:INFO:              jinja2: 3.1.6
2025-08-18 21:47:35,070:INFO:               scipy: 1.11.4
2025-08-18 21:47:35,070:INFO:              joblib: 1.3.2
2025-08-18 21:47:35,070:INFO:             sklearn: 1.4.2
2025-08-18 21:47:35,070:INFO:                pyod: 2.0.5
2025-08-18 21:47:35,070:INFO:            imblearn: 0.14.0
2025-08-18 21:47:35,070:INFO:   category_encoders: 2.7.0
2025-08-18 21:47:35,070:INFO:            lightgbm: 4.6.0
2025-08-18 21:47:35,070:INFO:               numba: 0.61.2
2025-08-18 21:47:35,070:INFO:            requests: 2.32.4
2025-08-18 21:47:35,070:INFO:          matplotlib: 3.7.5
2025-08-18 21:47:35,070:INFO:          scikitplot: 0.3.7
2025-08-18 21:47:35,070:INFO:         yellowbrick: 1.5
2025-08-18 21:47:35,070:INFO:              plotly: 5.24.1
2025-08-18 21:47:35,070:INFO:    plotly-resampler: Not installed
2025-08-18 21:47:35,071:INFO:             kaleido: 1.0.0
2025-08-18 21:47:35,071:INFO:           schemdraw: 0.15
2025-08-18 21:47:35,071:INFO:         statsmodels: 0.14.5
2025-08-18 21:47:35,071:INFO:              sktime: 0.26.0
2025-08-18 21:47:35,071:INFO:               tbats: 1.1.3
2025-08-18 21:47:35,071:INFO:            pmdarima: 2.0.4
2025-08-18 21:47:35,071:INFO:              psutil: 7.0.0
2025-08-18 21:47:35,071:INFO:          markupsafe: 3.0.2
2025-08-18 21:47:35,071:INFO:             pickle5: Not installed
2025-08-18 21:47:35,071:INFO:         cloudpickle: 3.1.1
2025-08-18 21:47:35,071:INFO:         deprecation: 2.1.0
2025-08-18 21:47:35,071:INFO:              xxhash: 3.5.0
2025-08-18 21:47:35,071:INFO:           wurlitzer: 3.1.1
2025-08-18 21:47:35,071:INFO:PyCaret optional dependencies:
2025-08-18 21:47:35,071:INFO:                shap: Not installed
2025-08-18 21:47:35,071:INFO:           interpret: Not installed
2025-08-18 21:47:35,071:INFO:                umap: Not installed
2025-08-18 21:47:35,071:INFO:     ydata_profiling: Not installed
2025-08-18 21:47:35,071:INFO:  explainerdashboard: Not installed
2025-08-18 21:47:35,071:INFO:             autoviz: Not installed
2025-08-18 21:47:35,071:INFO:           fairlearn: Not installed
2025-08-18 21:47:35,071:INFO:          deepchecks: Not installed
2025-08-18 21:47:35,071:INFO:             xgboost: Not installed
2025-08-18 21:47:35,071:INFO:            catboost: Not installed
2025-08-18 21:47:35,071:INFO:              kmodes: Not installed
2025-08-18 21:47:35,072:INFO:             mlxtend: Not installed
2025-08-18 21:47:35,072:INFO:       statsforecast: Not installed
2025-08-18 21:47:35,072:INFO:        tune_sklearn: Not installed
2025-08-18 21:47:35,072:INFO:                 ray: Not installed
2025-08-18 21:47:35,072:INFO:            hyperopt: Not installed
2025-08-18 21:47:35,072:INFO:              optuna: Not installed
2025-08-18 21:47:35,072:INFO:               skopt: Not installed
2025-08-18 21:47:35,072:INFO:              mlflow: Not installed
2025-08-18 21:47:35,072:INFO:              gradio: Not installed
2025-08-18 21:47:35,072:INFO:             fastapi: Not installed
2025-08-18 21:47:35,072:INFO:             uvicorn: Not installed
2025-08-18 21:47:35,072:INFO:              m2cgen: Not installed
2025-08-18 21:47:35,072:INFO:           evidently: Not installed
2025-08-18 21:47:35,072:INFO:               fugue: Not installed
2025-08-18 21:47:35,072:INFO:           streamlit: 1.48.1
2025-08-18 21:47:35,072:INFO:             prophet: Not installed
2025-08-18 21:47:35,072:INFO:None
2025-08-18 21:47:35,072:INFO:Set up data.
2025-08-18 21:47:35,074:INFO:Set up index.
2025-08-18 21:47:35,074:INFO:Assigning column types.
2025-08-18 21:47:35,075:INFO:Engine successfully changes for model 'kmeans' to 'sklearn'.
2025-08-18 21:47:35,075:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-08-18 21:47:35,075:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 21:47:35,075:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-08-18 21:47:35,075:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 21:47:35,075:INFO:Engine successfully changes for model 'dbscan' to 'sklearn'.
2025-08-18 21:47:35,075:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 21:47:35,075:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 21:47:35,075:INFO:Preparing preprocessing pipeline...
2025-08-18 21:47:35,075:INFO:Set up simple imputation.
2025-08-18 21:47:35,080:INFO:Finished creating preprocessing pipeline.
2025-08-18 21:47:35,081:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/33/8s2ttfyd7170lv2_ww0lccmw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address',
                                             'Abnormal_URL', 'HTTPS_token',
                                             'URL_Length', 'URL_of_Anchor',
                                             'Page_Rank', 'Request_URL',
                                             'has_political_keyword'],
                                    trans...SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-08-18 21:47:35,081:INFO:Creating final display dataframe.
2025-08-18 21:47:35,086:INFO:Setup _display_container:                Description                 Value
0               Session id                    42
1      Original data shape            (3600, 11)
2   Transformed data shape            (3600, 11)
3         Numeric features                    11
4               Preprocess                  True
5          Imputation type                simple
6       Numeric imputation                  mean
7   Categorical imputation                  mode
8                 CPU Jobs                    -1
9                  Use GPU                 False
10          Log Experiment                 False
11         Experiment Name  cluster-default-name
12                     USI                  deb2
2025-08-18 21:47:35,086:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 21:47:35,086:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 21:47:35,087:INFO:setup() successfully completed in 0.02s...............
2025-08-18 21:47:35,087:INFO:Initializing create_model()
2025-08-18 21:47:35,087:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x15ad08bd0>, estimator=kmeans, num_clusters=3, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={'random_state': 42})
2025-08-18 21:47:35,087:INFO:Checking exceptions
2025-08-18 21:47:35,091:INFO:Importing untrained model
2025-08-18 21:47:35,091:INFO:K-Means Clustering Imported successfully
2025-08-18 21:47:35,091:INFO:Fitting Model
2025-08-18 21:47:35,534:INFO:KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=3, n_init='auto', random_state=42, tol=0.0001, verbose=0)
2025-08-18 21:47:35,534:INFO:create_models() successfully completed......................................
2025-08-18 21:47:35,535:INFO:Uploading results into container
2025-08-18 21:47:35,536:INFO:Uploading model into container now
2025-08-18 21:47:35,539:INFO:_master_model_container: 1
2025-08-18 21:47:35,539:INFO:_display_container: 2
2025-08-18 21:47:35,539:INFO:KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=3, n_init='auto', random_state=42, tol=0.0001, verbose=0)
2025-08-18 21:47:35,539:INFO:create_model() successfully completed......................................
2025-08-18 21:47:35,592:INFO:Initializing save_model()
2025-08-18 21:47:35,592:INFO:save_model(model=KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=3, n_init='auto', random_state=42, tol=0.0001, verbose=0), model_name=artifacts/threat_actor_profiler, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/33/8s2ttfyd7170lv2_ww0lccmw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address',
                                             'Abnormal_URL', 'HTTPS_token',
                                             'URL_Length', 'URL_of_Anchor',
                                             'Page_Rank', 'Request_URL',
                                             'has_political_keyword'],
                                    trans...SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLUSTERING, kwargs={})
2025-08-18 21:47:35,593:INFO:Adding model into prep_pipe
2025-08-18 21:47:35,596:INFO:artifacts/threat_actor_profiler.pkl saved in current working directory
2025-08-18 21:47:35,597:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address',
                                             'Abnormal_URL', 'HTTPS_token',
                                             'URL_Length', 'URL_of_Anchor',
                                             'Page_Rank', 'Request_URL',
                                             'has_political_keyword'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('trained_model',
                 KMeans(algorithm='lloyd', copy_x=True, init='k-means++',
                        max_iter=300, n_clusters=3, n_init='auto',
                        random_state=42, tol=0.0001, verbose=0))],
         verbose=False)
2025-08-18 21:47:35,597:INFO:save_model() successfully completed......................................
2025-08-18 21:47:35,648:INFO:Initializing assign_model()
2025-08-18 21:47:35,648:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x15ad08bd0>, model=KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=3, n_init='auto', random_state=42, tol=0.0001, verbose=0), transformation=False, score=True, verbose=True)
2025-08-18 21:47:35,648:INFO:Checking exceptions
2025-08-18 21:47:35,648:INFO:Determining Trained Model
2025-08-18 21:47:35,648:INFO:Trained Model : K-Means Clustering
2025-08-18 21:47:35,648:INFO:Copying data
2025-08-18 21:47:35,649:INFO:(3600, 12)
2025-08-18 21:47:35,649:INFO:assign_model() successfully completed......................................
2025-08-18 21:47:58,097:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-18 21:47:58,097:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-18 21:47:58,097:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-18 21:47:58,097:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-18 21:48:04,367:INFO:Initializing load_model()
2025-08-18 21:48:04,367:INFO:load_model(model_name=artifacts/phishing_url_detector, platform=None, authentication=None, verbose=True)
2025-08-18 21:48:04,409:INFO:Initializing load_model()
2025-08-18 21:48:04,409:INFO:load_model(model_name=artifacts/threat_actor_profiler, platform=None, authentication=None, verbose=True)
2025-08-18 21:48:04,413:INFO:Initializing predict_model()
2025-08-18 21:48:04,413:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30560f890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address',
                                             'Abnormal_URL', 'HTTPS_token',
                                             'URL_Length', 'URL_of_Anchor',
                                             'Page_Rank', 'Request_URL',
                                             'has_political_keyword'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x305719a80>)
2025-08-18 21:48:04,413:INFO:Checking exceptions
2025-08-18 21:48:04,413:INFO:Preloading libraries
2025-08-18 21:48:04,413:INFO:Set up data.
2025-08-18 21:48:04,415:INFO:Set up index.
2025-08-18 21:48:04,474:INFO:Initializing predict_model()
2025-08-18 21:48:04,474:INFO:predict_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x3055e9750>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address',
                                             'Abnormal_URL', 'HTTPS_token',
                                             'URL_Length', 'URL_of_Anchor',
                                             'Page_Rank', 'Request_URL',
                                             'has_political_keyword'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model', KMeans(n_clusters=3, random_state=42))]), ml_usecase=None)
2025-08-18 21:48:04,474:INFO:Set up data.
2025-08-18 21:58:44,419:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-18 21:58:44,419:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-18 21:58:44,419:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-18 21:58:44,419:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-18 21:58:53,544:INFO:Initializing load_model()
2025-08-18 21:58:53,544:INFO:load_model(model_name=artifacts/phishing_url_detector, platform=None, authentication=None, verbose=True)
2025-08-18 21:58:53,593:INFO:Initializing load_model()
2025-08-18 21:58:53,593:INFO:load_model(model_name=artifacts/threat_actor_profiler, platform=None, authentication=None, verbose=True)
2025-08-18 21:58:53,599:INFO:Initializing predict_model()
2025-08-18 21:58:53,599:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x105229b10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address',
                                             'Abnormal_URL', 'HTTPS_token',
                                             'URL_Length', 'URL_of_Anchor',
                                             'Page_Rank', 'Request_URL',
                                             'has_political_keyword'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3049d6d40>)
2025-08-18 21:58:53,599:INFO:Checking exceptions
2025-08-18 21:58:53,599:INFO:Preloading libraries
2025-08-18 21:58:53,599:INFO:Set up data.
2025-08-18 21:58:53,601:INFO:Set up index.
2025-08-18 21:58:53,661:INFO:Initializing predict_model()
2025-08-18 21:58:53,661:INFO:predict_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x304817590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address',
                                             'Abnormal_URL', 'HTTPS_token',
                                             'URL_Length', 'URL_of_Anchor',
                                             'Page_Rank', 'Request_URL',
                                             'has_political_keyword'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model', KMeans(n_clusters=3, random_state=42))]), ml_usecase=None)
2025-08-18 21:58:53,661:INFO:Set up data.
